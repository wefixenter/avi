#include <RMaker.h>
#include <WiFi.h>
#include <WiFiProv.h>

// === Configuration ===
#define WIFI_PROV_SECURITY1_PASSWORD "12345678"
const char *device_name_prefix = "ESP32_8CH";

// === Relay and Touch Pin Mapping ===
static uint8_t relayPins[8] = {23, 22, 21, 19, 18, 5, 4, 2};
static uint8_t touchPins[8] = {15, 32, 33, 27, 14, 12, 13, 25};
bool lastTouchState[8] = {false};

// === RainMaker Switch Devices ===
static Switch *my_switch[8];

// === Write Callback from RainMaker ===
void write_callback(Device *device, Param *param, esp_rmaker_param_val_t val, void *priv_data, write_ctx_t *ctx) {
  for (int i = 0; i < 8; i++) {
    if (my_switch[i] == device && strcmp(param->getParamName(), "Power") == 0) {
      bool state = val.val.b;
      digitalWrite(relayPins[i], state ? LOW : HIGH);  // Relay ON = LOW
      my_switch[i]->updateAndReportParam("Power", state);
    }
  }
}

// === Handle Provisioning Events ===
void sysProvEvent(arduino_event_t *event) {
  switch (event->event_id) {
    case ARDUINO_EVENT_PROV_START:
      Serial.println("Provisioning started!");
      printQR(device_name_prefix, WIFI_PROV_SECURITY1_PASSWORD, "softap");
      break;
    case ARDUINO_EVENT_PROV_END:
      Serial.println("Provisioning ended.");
      break;
    case ARDUINO_EVENT_PROV_INIT:
      Serial.println("Provisioning initialized.");
      break;
    // removed unsupported event cases
  }
}

// === Touch to Toggle Relay ===
void checkTouchInputs() {
  for (int i = 0; i < 8; i++) {
    bool currentTouch = digitalRead(touchPins[i]) == LOW;
    if (currentTouch != lastTouchState[i]) {
      lastTouchState[i] = currentTouch;
      if (currentTouch) {
        bool currentRelayState = digitalRead(relayPins[i]) == LOW;
        bool newRelayState = !currentRelayState;
        digitalWrite(relayPins[i], newRelayState ? LOW : HIGH);
        my_switch[i]->updateAndReportParam("Power", newRelayState);
      }
    }
  }
}

void setup() {
  Serial.begin(115200);
  delay(1000);
  Serial.println("ESP32 8-CH Relay with TTP223 + RainMaker");

  // === Init GPIOs ===
  for (int i = 0; i < 8; i++) {
    pinMode(relayPins[i], OUTPUT);
    digitalWrite(relayPins[i], HIGH);  // Relay OFF initially
    pinMode(touchPins[i], INPUT);
  }

  // === RainMaker Node ===
  Node my_node = RMaker.initNode("ESP32_8CH_Relay");

  // === Create and Register Switches ===
  for (int i = 0; i < 8; i++) {
    char name[12];
    snprintf(name, sizeof(name), "Relay%d", i + 1);
    my_switch[i] = new Switch(name, NULL);
    my_switch[i]->addCb(write_callback);
    my_node.addDevice(*my_switch[i]);
  }

  // === Enable RainMaker Features ===
  RMaker.enableOTA(OTA_USING_PARAMS);
  RMaker.enableScenes();
  // RMaker.enableTime(); // <-- Removed, not available

  // === Connect RainMaker ===
  RMaker.start();

  // === Setup SoftAP Provisioning ===
  WiFi.onEvent(sysProvEvent);
  WiFiProv.beginProvision(NETWORK_PROV_SCHEME_SOFTAP,
                          NETWORK_PROV_SCHEME_HANDLER_NONE,
                          NETWORK_PROV_SECURITY_1,
                          NULL,
                          WIFI_PROV_SECURITY1_PASSWORD,
                          device_name_prefix,
                          NULL,
                          true);
}

void loop() {
  checkTouchInputs();
  delay(100);
}
